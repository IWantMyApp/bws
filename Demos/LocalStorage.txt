Note: There is also a Blazored.SessionStorage. Point out that the list of different plugins can be found at https://github.com/Blazored

Step 1: Install the following nuget package
-------------------------------------------
Blazored.LocalStorage

Step 2: You will need to register the local storage services with the service collection in your program.cs file
--------------------------------------------------------------------------------------------
builder.Services.AddBlazoredLocalStorage();

The local storage provides options that can be modified by you at registration in your program.cs file:
services.AddBlazoredLocalStorage(config =>config.JsonSerializerOptions.WriteIndented = true);

Step 3: Add the namespace to the imports file
---------------------------------------------
@using Blazored.LocalStorage

Step 4: Modify the index component to include the following code
-----------------------------------------------------------------

@page "/"

@inject ILocalStorageService localStore

<h1>Your LocalStorage Note</h1>

<textarea @bind="noteContent" />
<br />
<button @onclick="UpdateLocalStorage">Save</button>
<button @onclick="ClearLocalStorage">Clear</button>


@code{
    const string noteKey = "note";
    string noteContent;

    public async void UpdateLocalStorage()
    {
        await localStore.SetItemAsync(noteKey, noteContent);
    }

    public async void ClearLocalStorage()
    {
        noteContent = "";
        //await localStore.ClearAsync();
        await localStore.RemoveItemAsync(noteKey);
    }

    protected override async Task OnInitializedAsync()
    {
        noteContent = await localStore.GetItemAsync<string>(noteKey);

    }
}









