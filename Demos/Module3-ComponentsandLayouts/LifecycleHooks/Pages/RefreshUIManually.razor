@page "/RefreshUIManually"

@using System.Threading;
@implements IDisposable


<h1>@Count</h1>

<button class="btn btn-primary" @onclick=StartCountdown>Start Countdown</button>

@code{
    private int Count { get; set; } = 10;

    void StartCountdown()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            if (Count <= 0) return;
            Count--;

            // Note that the following line is necessary otherwise
            // Blazor would not recognize the state change and hence the UI would not rerender
            this.StateHasChanged();

        }), null, 1000, 1000);
    }


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("OnAfterRender lifecycle hook called - firstRender");
        }
        else
        {
            Console.WriteLine("OnAfterRender lifecycle hook called");
        }
    }

    void IDisposable.Dispose()
    {
        Console.WriteLine("Dispose Method Called");
    }



}