@page "/counter"
@page "/counter/{CurrentCount:int}"

<h1>Counter</h1>

<p>Current count: @CurrentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<ul>
    <li><a href="/counter/42">Navigate to /counter/42</a></li>
    <li><a href="/counter/123">Navigate to /counter/123</a></li>
    <li><a href="/counter/">Navigate to /counter</a></li>
</ul>

@code {
    [Parameter]
    public int? CurrentCount { get; set; }

    private string MyName;

    // TODO: This would introduce a bug where clicking on /counter
    // would fail to reset the value to 1. Instead you should use the SetParametersAsync
    //protected override void OnInitialized()
    //{
    //    base.OnInitialized();
    //    CurrentCount = CurrentCount ?? 1;
    //    Console.WriteLine("OnInitialized lifecycle hook called");
    //}

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        CurrentCount = CurrentCount ?? 1;
        Console.WriteLine("SetParametersAsync lifecycle hook called");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // wire JS library
            Console.WriteLine("OnAfterRender lifecycle hook called - firstRender");
        }
        else
        {
            Console.WriteLine("OnAfterRender lifecycle hook called");
        }
    }


    private void IncrementCount()
    {
        CurrentCount++;
    }
}
